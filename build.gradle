plugins {
    id "fabric-loom" version "$loom_version" apply false
    id "io.freefair.lombok" version "$lombok_version" apply false
    id "maven-publish"
}

def outProjects = subprojects - project("test-mod")

allprojects {
    apply plugin: "fabric-loom"

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    group = rootProject.maven_group
    version = rootProject.mod_version

    processResources {
        inputs.property "version", project.version

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    tasks.withType(JavaCompile).configureEach {
        // ensure that the encoding is set to UTF-8, no matter what the system default is
        // this fixes some edge cases with special characters not displaying correctly
        // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
        it.options.encoding = "UTF-8"

        it.options.release = 17
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        withSourcesJar()
        withJavadocJar()
    }

    jar {
        from "LICENSE"
    }

    javadoc {
        options {
            source = "17"
            encoding = "UTF-8"
            charSet = "UTF-8"
            memberLevel = JavadocMemberLevel.PROTECTED
            links = [
                    "https://docs.oracle.com/en/java/javase/17/docs/api/"
            ]
            // Disable the crazy super-strict doclint tool in Java 8
            addStringOption("Xdoclint:none", "-quiet")
        }
        failOnError false
    }

    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            url "https://maven.terraformersmc.com/"
        }
        maven {
            url "https://maven.shedaniel.me/"
        }
        maven {
            url "https://maven.isxander.dev/releases"
        }
        maven {
            url "https://maven.quiltmc.org/repository/release"
        }
        maven {
            url "https://jitpack.io"
        }
    }

    dependencies {
        minecraft("com.mojang:minecraft:$minecraft_version")
        mappings("net.fabricmc:yarn:$yarn_mappings:v2")
        modImplementation("net.fabricmc:fabric-loader:$loader_version")

        // Using modApi because api does not include dependency inside Maven pom file
        // see https://github.com/FabricMC/fabric-loom/issues/200
        // TODO: Test if this bug still applies
        modApi("org.spongepowered:configurate-hocon:$configurate_version")

        implementation("org.jetbrains:annotations:$jetbrains_annotations_version")
    }

    // Disable Gradle Module Metadata (.module) generation
    // The module file doesn't include excludes of transitive dependencies
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
}

subprojects {
    apply plugin: "io.freefair.lombok"

    archivesBaseName = "$rootProject.archives_base_name-${project.name}"
}

configure(outProjects) {
    apply plugin: "maven-publish"

    // configure the maven publication
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }
}

remapJar {
    afterEvaluate {
        outProjects.each {
            nestedJars.from it.tasks.remapJar
        }
    }
}
